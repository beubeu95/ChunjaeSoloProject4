<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="lecture">
    <select id="lectureList" resultType="kr.ed.haebeop.domain.LectureVO">
        <![CDATA[
            SELECT lno, a.cate as cate,cateName, a.title as title, a.content as content,img, a.price as price, status, sdate, edate, tdate, tname, amt
            FROM lecture a JOIN teacher b ON a.tcode = b.tcode JOIN category c ON a.cate=c.cate
        ]]>
        <where>
            <if test="category != null">
                AND a.cate = #{category}
            </if>
        </where>
        <![CDATA[
            ORDER BY lno DESC
        ]]>
    </select>

    <select id="getCount" resultType="integer">
        select count(*) from lecture
    </select>

    <select id="cateList" resultType="kr.ed.haebeop.domain.Category">
        select * from category
    </select>

    <select id="lectureDetail" resultType="kr.ed.haebeop.domain.LectureVO">
        SELECT lno,c.bcode as bcode, cateName, title, a.content as content, img, video, a.price as price, status, sdate, edate, tdate, tname, bname, amt
        FROM lecture a JOIN teacher b ON a.tcode = b.tcode JOIN book c ON a.bcode = c.bcode JOIN category d ON a.cate=d.cate
        WHERE lno=#{lno}
    </select>

    <select id="canApply" resultType="integer">
        SELECT (SELECT amt FROM lecture WHERE lno = #{lno}) - (SELECT COUNT(*) FROM payment WHERE lno = #{lno});
    </select>

    <insert id="lectureInsert" parameterType="lecture">
        insert into lecture (cate, title, content, price, bcode,tcode, status, sdate,edate,amt)
        values(#{cate},#{title},#{content},#{price},#{bcode},#{tcode},#{status},#{sdate},#{edate},#{amt})
        <selectKey resultType="int" keyProperty="lno" order="AFTER">
            SELECT LAST_INSERT_title()
        </selectKey>
    </insert>

    <!-- 파일 추가 -->
    <insert id="fileRegister" parameterType="lecture">
        insert into fileinfo (lno, savefolder, originfile, savefile)
        values
        <foreach collection="fileInfos" item="fileinfo" separator=" , ">
            (#{lno}, #{fileinfo.saveFolder}, #{fileinfo.originFile}, #{fileinfo.saveFile})
        </foreach>
    </insert>
    <resultMap type="lecture" id="lectureList">
        <result property="lno" column="lno"/>
        <result property="cate" column="cate"/>
        <result property="content" column="content"/>
        <result property="price" column="price"/>
        <result property="bcode" column="bcode"/>
        <result property="tcode" column="tcode"/>
        <result property="status" column="status"/>
        <result property="sdate" column="sdate"/>
        <result property="edate" column="edate"/>
        <result property="tdate" column="tdate"/>
        <result property="amt" column="amt"/>
        <collection property="fileInfos" column="lno" javaType="list" ofType="FileInfo" select="fileInfos"/>
    </resultMap>

    <select id="teacherList" resultType="kr.ed.haebeop.domain.Teacher">
        select * from teacher
    </select>

    <delete id="teacherDelete">
        delete from teacher where tcode= #{tcode}
    </delete>

    <select id="tnameList" resultType="kr.ed.haebeop.domain.Teacher">
        select tname from Teacher
    </select>

    <select id="bnameList" resultType="kr.ed.haebeop.domain.Book">
        select bname from book
    </select>

    <select id="getLectureList2" resultType="kr.ed.haebeop.domain.LectureVO">
    SELECT l.lno AS lno, l.title, tname, l.img AS img
    FROM lecture l JOIN payment r ON (l.lno=r.lno) JOIN teacher t ON (l.tcode=t.tcode) GROUP BY l.lno
    ORDER BY COUNT(*) DESC LIMIT 6
    </select>

    <update id="lectureUpdate" >
        update lecture set cate=#{cate}, title=#{title}, content=#{content}, price=#{price}, bcode=#{bcode},tcode=#{tcode}, status=#{status}, sdate=#{sdate},edate=#{edate},amt=#{amt}
        where lno=#{lno}
    </update>
</mapper>